#!/usr/bin/perl
# $Id: lq,v 1.11 2020-08-20 21:03:04-07 - - $
#
# NAME
#    lq - list quotas of /afs/ volumes
#
# SYNOPSIS
#    lq [-kmg] [volume...]
#
# DESCRIPTION
#    Uses the command fs lq to determine the quota information
#    about a list of volumes.  If no volumes are specified,
#    uses the volume containing ".".
#
# OPTIONS
#    -k  prints information in KiB
#    -m  prints information in MiB (default)
#    -g  prints information in GiB
# 

use strict;
use warnings;
use Getopt::Std;

my %opts;
getopts "kmg", \%opts;
$opts{'m'} = 1 unless $opts{'k'} || $opts{'g'};
my ($fmt, $unit, $div);
$fmt = "%8.0f", $unit = "KiB", $div = (1<< 0) if $opts{'k'};
$fmt = "%8.1f", $unit = "MiB", $div = (1<<10) if $opts{'m'};
$fmt = "%8.3f", $unit = "GiB", $div = (1<<20) if $opts{'g'};

my @quotas = qx(fs lq @ARGV);
my $titles = shift @quotas;
$titles =~ s/ Name/_Name/;
my ($volume, $quota, $used) = split ' ', $titles;
printf "%-16s %14s %14s %7s %14s\n",
       $volume, $quota, $used, "%Used", "Available";;

sub comma($) {
   my ($number) = @_;
   my $string = sprintf $fmt, $number;
   $string =~ s/(\d)(\d{3})(\.|$)/$1,$2$3/;
   1 while $string =~ s/(\d)(\d{3}),/$1,$2,/;
   return "$string $unit";
}

sub print_info($$$) {
   my ($volume, $quota, $used) = @_;
   printf "%-16s %14s %14s %6.1f%% %14s\n",
          $volume,
          comma ($quota / $div),
          comma ($used / $div),
          $used / $quota * 100,
          comma (($quota - $used) / $div);
}

my $total_quota = 0;
my $total_used = 0;
for my $quota (@quotas) {
   my ($volume, $quota, $used) = split ' ', $quota;
   print_info $volume, $quota, $used;
   $total_quota += $quota;
   $total_used += $used;
}

if (@quotas > 1) {
   print_info "TOTAL", $total_quota, $total_used;
}

